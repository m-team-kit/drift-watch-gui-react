{
  "security": [
    {
      "bearerAuth": [ ]
    }
  ],
  "info": {
    "summary": "A drift tracking server.",
    "description": "This is server to track and monitor data and concept drifts for machine learning models.",
    "termsOfService": "TODO: Add terms of service",
    "contact": {
      "name": "API Support",
      "url": "https://www.example.com/support",
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://www.example.com/support"
    },
    "title": "Drift Detection Monitor API",
    "version": "latest"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "status": {
            "type": "string",
            "description": "Error name"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "type": "object",
            "description": "Errors",
            "additionalProperties": { }
          }
        }
      },
      "PaginationMetadata": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "first_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "previous_page": {
            "type": "integer"
          },
          "next_page": {
            "type": "integer"
          }
        }
      },
      "Entitlements": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "Schema": {
        "type": "object",
        "properties": { }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "entity": {
            "type": "string"
          },
          "level": {
            "type": "string",
            "enum": [
              "Read",
              "Edit",
              "Manage"
            ]
          }
        },
        "required": [
          "entity",
          "level"
        ],
        "additionalProperties": false
      },
      "Experiment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "public": {
            "type": "boolean",
            "default": false
          },
          "permissions": {
            "type": "array",
            "default": [ ],
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        },
        "required": [
          "created_at",
          "id",
          "name"
        ]
      },
      "CreateExperiment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "public": {
            "type": "boolean",
            "default": false
          },
          "permissions": {
            "type": "array",
            "default": [ ],
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "Drift": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "readOnly": true
          },
          "job_status": {
            "type": "string",
            "enum": [
              "Running",
              "Completed",
              "Failed"
            ]
          },
          "tags": {
            "type": "array",
            "default": [ ],
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          "model": {
            "type": "string"
          },
          "drift_detected": {
            "type": "boolean"
          },
          "parameters": {
            "type": "object",
            "default": { },
            "additionalProperties": { }
          },
          "schema_version": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "drift_detected",
          "id",
          "job_status",
          "model",
          "schema_version"
        ]
      },
      "CreateDrift": {
        "type": "object",
        "properties": {
          "job_status": {
            "type": "string",
            "enum": [
              "Running",
              "Completed",
              "Failed"
            ]
          },
          "tags": {
            "type": "array",
            "default": [ ],
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          },
          "model": {
            "type": "string"
          },
          "drift_detected": {
            "type": "boolean"
          },
          "parameters": {
            "type": "object",
            "default": { },
            "additionalProperties": { }
          }
        },
        "required": [
          "drift_detected",
          "job_status",
          "model"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "readOnly": true
          },
          "subject": {
            "type": "string",
            "readOnly": true
          },
          "issuer": {
            "type": "string",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "id"
        ]
      }
    },
    "responses": {
      "DEFAULT_ERROR": {
        "description": "Default error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "UNPROCESSABLE_ENTITY": {
        "description": "Unprocessable Entity",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "headers": {
      "PAGINATION": {
        "description": "Pagination metadata",
        "schema": {
          "$ref": "#/components/schemas/PaginationMetadata"
        }
      }
    }
  },
  "servers": [
    {
      "url": "/api/latest"
    }
  ],
  "paths": {
    "/entitlement": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entitlements"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Return list of entitlements based on the provided OIDC token.",
        "tags": [
          "Entitlements"
        ]
      }
    },
    "/experiment/search": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "type": "string",
              "default": "created_at",
              "enum": [
                "created_at",
                "name",
                "public"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Experiment"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schema"
              }
            }
          }
        },
        "summary": "Get a paginated list of experiments based on the provided JSON query\nand MongoDB format.",
        "tags": [
          "Experiments"
        ]
      }
    },
    "/experiment": {
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExperiment"
              }
            }
          }
        },
        "summary": "Create a new experiment record in the database.",
        "tags": [
          "Experiments"
        ]
      }
    },
    "/experiment/{experiment_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieve an experiment by its ID from the database.",
        "tags": [
          "Experiments"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Experiment"
              }
            }
          }
        },
        "summary": "Update a experiment record with the given JSON data.",
        "tags": [
          "Experiments"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a experiment record from the database.",
        "tags": [
          "Experiments"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "experiment_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/experiment/{experiment_id}/drift/search": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "type": "string",
              "default": "created_at",
              "enum": [
                "created_at",
                "job_status",
                "model",
                "drift_detected",
                "schema_version"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Drift"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schema"
              }
            }
          }
        },
        "summary": "Get a paginated list of drift Jobs based on the provided JSON query\nand MongoDB format.",
        "tags": [
          "Experiments"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "experiment_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/experiment/{experiment_id}/drift": {
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Drift"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDrift"
              }
            }
          }
        },
        "summary": "Create a new drift Job record in the database.",
        "tags": [
          "Experiments"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "experiment_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/experiment/{experiment_id}/drift/{drift_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Drift"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieve a drift job by its id from the database.",
        "tags": [
          "Experiments"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Drift"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Drift"
              }
            }
          }
        },
        "summary": "Update a drift job record with the given JSON data.",
        "tags": [
          "Experiments"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Delete a drift job record from the database.",
        "tags": [
          "Experiments"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "experiment_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "in": "path",
          "name": "drift_id",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/user/search": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "type": "string",
              "default": "created_at",
              "enum": [
                "created_at",
                "email",
                "subject",
                "issuer"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schema"
              }
            }
          }
        },
        "summary": "Retrieve a paginated list of users based on the provided JSON query\nand MongoDB format.",
        "tags": [
          "Users"
        ]
      }
    },
    "/user": {
      "post": {
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "Error code"
                    },
                    "status": {
                      "type": "string",
                      "description": "Error name"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Register and create the token owner as new user.",
        "tags": [
          "Users"
        ]
      }
    },
    "/user/self": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the user information based on the provided auth token.",
        "tags": [
          "Users"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "HTTP status code"
                    },
                    "status": {
                      "type": "string",
                      "description": "HTTP status message"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Updates the user information based on the provided auth token.",
        "tags": [
          "Users"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Entitlements",
      "description": "\n## API Methods to list, entitlements.\n"
    },
    {
      "name": "Experiments",
      "description": "\n## API Methods to list, register, edit and remove experiments.\n"
    },
    {
      "name": "Users",
      "description": "\n## API Methods to list, register and remove users.\n"
    }
  ],
  "openapi": "3.1.0"
}